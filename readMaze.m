function [M, OM, SR, SC] = readMaze()
% 读取地图矩阵
% -------------------------------------------------------------------------
%   
%   函数 :
%   [M, OM] = readMaze()
%   输出 :
%   M       - 地图, [nrows,ncolumns, 4]. M(:,:,i) i 是 左上右下的分量
%  OM       - 原始地图, 矩阵格式 [nrows,ncolumns] 1 表示不能进入 0 表示空
%   SR       - 输出所有的可以访问的状态列表
%   SC

TM5_5 = [
    0,0,0,0,0;
    1,1,0,0,1;
    0,0,0,0,0;
    0,0,1,0,0;
    0,0,1,0,0;
];
TM10_10 = [
    0,0,0,1,1,1,1,1,0,0;
    1,1,0,0,0,1,0,1,0,0;
    0,1,0,0,0,1,0,0,0,1;
    0,1,0,0,1,0,1,1,0,0;
    0,0,0,0,0,0,1,1,0,0;
    0,0,0,1,1,0,1,1,0,0;
    1,1,0,0,0,0,0,1,0,0;
    0,1,0,0,0,1,0,0,0,1;
    0,1,0,0,1,0,1,1,0,0;
    0,0,0,0,0,0,1,1,0,0;
];
TM20_10 = [
    0,0,0,1,1,1,1,1,0,0;
    1,1,0,0,0,1,0,1,0,0;
    0,1,0,0,0,1,0,0,0,1;
    0,1,0,0,1,0,1,1,0,0;
    0,0,0,0,0,0,1,1,0,0;
    0,0,0,1,1,0,1,1,0,0;
    1,1,0,0,0,0,0,1,0,0;
    0,1,0,0,0,1,0,0,0,1;
    0,1,0,0,1,0,1,1,0,0;
    0,0,0,0,0,0,1,1,0,0;
    0,0,0,1,1,1,1,1,0,0;
    1,1,0,0,0,1,0,1,0,0;
    0,1,0,0,0,1,0,0,0,1;
    0,1,0,0,1,0,1,1,0,0;
    0,0,0,0,0,0,1,1,0,0;
    0,0,0,1,1,0,1,1,0,0;
    1,1,0,0,0,0,0,1,0,0;
    0,1,0,0,0,1,0,0,0,1;
    0,1,0,0,1,0,1,1,0,0;
    0,0,0,0,0,0,1,1,0,0;
];
TM20_20 = repmat(TM20_10,1,2);
OM = TM10_10;
% 转换为 4 层的矩阵, 分别表示:左下右上
[nr, nc, ~] = size(OM);
M = zeros(nr, nc, 4);
k = 1;
for r=1:nr
    for c=1:nc
        optR = [ r  , r-1, r  , r+1 ];
        optC = [ c-1, c  , c+1, c   ];
        reachable = ones(4,1);
        for d=1:4
            if(optR(d) <1 || optR(d) > nr || optC(d) < 1 || optC(d) > nc || OM(optR(d), optC(d)) == 1)
                    reachable(d) = 0;  % 表示这个方向不能去
            end
        end
        % 设置矩阵
        M(r,c, :) = reachable;
        % 状态
        if OM(r, c) == 0
            SR(k) = r;
            SC(k) = c;
            k = k + 1;
        end
    end
end
end